#!/usr/bin/bash

##leh btzhar f el delete
echo "choose table you want to insert in "

array=( `ls` )

choice=$(zenity --list --title="Choose Table to Insert" --text="Select a table to insert:" --column="Tables" "${array[@]}")

if [ $? -eq 1 ]; then
  exit 0
fi


table_name=$choice
zenity --info --text="You are now inside $table_name table"

# da ll input lma ykon numbers 
# select choice in ${array[*]}
# do 
#    if [ $REPLY -gt ${#array[*]} ]
#   then 
#     echo $REPLY not in menue
#     continue
#    else
#      table_name=${array[${REPLY}-1]} 2> /dev/null # array start from 0 f lazem 3l4an my3ml4 delete lly ba3do 
#      echo 'you arre now inside '${array[${REPLY}-1]}' table' 

#      break 
#    fi
# done



###########################################################
col_types=$(awk -F: '{print $2}' ./"."$table_name"_metadata" 2> /dev/null)
col_names=$(awk -F: '{print $1}' ./"."$table_name"_metadata" 2> /dev/null)
names=($col_names)
types=($col_types)

echo "Column Names: $col_names"
echo "Column Types: $col_types"
echo "Names Array: ${names[@]}"
echo "Types Array: ${types[@]}"
echo "Number of Names: ${#names[@]}"

if [[ ${#names[@]} -eq 0 ]]; then
    echo "No column names found in metadata."
    exit 1
fi




while true 
do 
    echo "Insert values in the following order:"
    row=""
    
    for ((i = 0; i < ${#names[@]}; i++))
    do
        while true
        do

            value=$(zenity --entry --title="Insert Value" --text="enter value for ${names[i]} that has type (${types[i]}):")

#            read -p "Enter value for ${names[i]} that has type (${types[i]}): " value
             
            
            if [[ -z $value ]]
            then
                zenity --error --text="Value can't be empty"
                echo "Value can't be empty"
                continue
            fi
            
            
            if [[ ${types[i]} == 'int' ]]
            then
                if [[ $value =~ ^[0-9]+$ ]]
                then
                    if [[ $i -eq 0 ]]
                    then

                        
                        if grep -q "^$value:" "$table_name"
                         then
                             zenity --error --text="primary key $value already exists in table $table_name"
                             echo "primary key $value already exists in table $table_name"
                             continue
                        else
                             row+="$value:"
                             break
                        fi
                    else
                        row+="$value:"
                        break
                    fi
                else
                    zenity --error --text="value must be an integer"
                    echo "value must be an integer"
                    continue
                fi
            fi
            
            
            
            if [[ ${types[i]} == 'str' ]]
            then 
                    if [[ $i -eq 0 ]]
                then
                   
                   #3l4an 2t2ked en el input ely hyd5alo m4 mtkrar
                    if grep -q "^$value:" "$table_name"
                    then
                        zenity --error --text="primary key $value already exists in table $table_name"
                        echo "primary key $value already exists in table $table_name"
                        continue
                    else
                        row+="$value:"
                        break
                    fi
                else
                    row+="$value:"
                    break
                fi
               
            fi
             zenity --error --text="invalid value type for ${names[i]}"
            echo "invalid value type for ${names[i]}"
        done
    done
   
    row=${row%:}
    echo "$row" >> $table_name 2>/dev/null   
    zenity --info --text="row inserted successfully into $table_name"
    echo "row inserted successfully into $table_name"
    
    row=${row%:}
    echo "$row" >> $table_name 2>/dev/null   
    zenity --info --text="row inserted successfully into $table_name"
    echo "row inserted successfully into $table_name"
    
   

   PK_array+=" $row"
   PK_array=${PK_array%% *}

   

   PK_array+=" $row"
   PK_array=${PK_array%% *}

   ########################--------------------######################
   
    # 
    # read -p "Do you want to insert another row? (yes/no): " check
    #      if [[ "no" == $check ]]
    #      then
    #     	break
    #       fi



    if zenity --question --text="Do you want to insert another row?"
    then
       continue
    else
       break
    fi
done
